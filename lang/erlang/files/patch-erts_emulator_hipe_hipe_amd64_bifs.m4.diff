--- erts/emulator/hipe/hipe_amd64_bifs.m4	2009-03-12 13:16:06.000000000 +0100
+++ erts/emulator/hipe/hipe_amd64_bifs.m4	2009-09-02 18:31:07.000000000 +0200
@@ -46,18 +46,20 @@
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,1,0)
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C
-	call	$2
+	call	CSYM($2)
 	TEST_GOT_MBUF
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG
 
 	/* throw exception if failure, otherwise return */
@@ -65,18 +67,18 @@
 	jz	nbif_1_simple_exception
 	NBIF_RET(1)
 	HANDLE_GOT_MBUF(1)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(standard_bif_interface_2,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,2,0)
@@ -84,8 +86,10 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C
-	call	$2
+	call	CSYM($2)
 	TEST_GOT_MBUF
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG
 
 	/* throw exception if failure, otherwise return */
@@ -93,18 +97,18 @@
 	jz	nbif_2_simple_exception
 	NBIF_RET(2)
 	HANDLE_GOT_MBUF(2)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(standard_bif_interface_3,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,3,0)
@@ -113,8 +117,10 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C
-	call	$2
+	call	CSYM($2)
 	TEST_GOT_MBUF
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG
 
 	/* throw exception if failure, otherwise return */
@@ -122,8 +128,8 @@
 	jz	nbif_3_simple_exception
 	NBIF_RET(3)
 	HANDLE_GOT_MBUF(3)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 /*
@@ -136,17 +142,19 @@
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C
-	call	$2
+	call	CSYM($2)
 	TEST_GOT_MBUF
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG
 
 	/* throw exception if failure, otherwise return */
@@ -154,8 +162,8 @@
 	jz	nbif_0_trap_exception
 	NBIF_RET(0)
 	HANDLE_GOT_MBUF(0)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 /*
@@ -172,59 +180,63 @@
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C
-	call	$2
+	call	CSYM($2)
 	TEST_GOT_MBUF
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG
 
 	/* return */
 	NBIF_RET(0)
 	HANDLE_GOT_MBUF(0)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(nofail_primop_interface_1,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,1,0)
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C
-	call	$2
+	call	CSYM($2)
 	TEST_GOT_MBUF
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG
 
 	/* return */
 	NBIF_RET(1)
 	HANDLE_GOT_MBUF(1)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(nofail_primop_interface_2,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,2,0)
@@ -232,25 +244,27 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C
-	call	$2
+	call	CSYM($2)
 	TEST_GOT_MBUF
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG
 
 	/* return */
 	NBIF_RET(2)
 	HANDLE_GOT_MBUF(2)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(nofail_primop_interface_3,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,3,0)
@@ -259,15 +273,17 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C
-	call	$2
+	call	CSYM($2)
 	TEST_GOT_MBUF
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG
 
 	/* return */
 	NBIF_RET(3)
 	HANDLE_GOT_MBUF(3)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 /*
@@ -285,55 +301,59 @@
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(0)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(nocons_nofail_primop_interface_1,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,1,0)
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(1)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(nocons_nofail_primop_interface_2,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,2,0)
@@ -341,23 +361,25 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(2)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(nocons_nofail_primop_interface_3,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,3,0)
@@ -366,23 +388,25 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(3)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(nocons_nofail_primop_interface_5,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	movq	P, %rdi
 	NBIF_ARG(%rsi,5,0)
@@ -393,13 +417,15 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(5)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 /*
@@ -417,74 +443,80 @@
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(0)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(noproc_primop_interface_1,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	NBIF_ARG(%rdi,1,0)
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(1)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(noproc_primop_interface_2,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	NBIF_ARG(%rdi,2,0)
 	NBIF_ARG(%rsi,2,1)
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(2)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(noproc_primop_interface_3,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	NBIF_ARG(%rdi,3,0)
 	NBIF_ARG(%rsi,3,1)
@@ -492,23 +524,25 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(3)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 define(noproc_primop_interface_5,
 `
 #ifndef HAVE_$1
 #`define' HAVE_$1
-	.section ".text"
+	TEXT
 	.align	4
-	.global	$1
-$1:
+	GLOBAL(ASYM($1))
+ASYM($1):
 	/* set up the parameters */
 	NBIF_ARG(%rdi,5,0)
 	NBIF_ARG(%rsi,5,1)
@@ -518,13 +552,15 @@
 
 	/* make the call on the C stack */
 	SWITCH_ERLANG_TO_C_QUICK
-	call	$2
+	call	CSYM($2)
+
+	/* switch to native stack */
 	SWITCH_C_TO_ERLANG_QUICK
 
 	/* return */
 	NBIF_RET(5)
-	.size	$1,.-$1
-	.type	$1,@function
+	SET_SIZE(ASYM($1))
+	TYPE_FUNCTION(ASYM($1))
 #endif')
 
 /*
